const fs = require('fs');

const CIPHERED_TEXT = 'yX@CENVERGRVC^YP\RNoxeT^G_RErP^CD_XB[SCV\RVDCE^YPÕ·ï¿½_R[[X@XE[SÕ·ï¿½VYSP^ARYC_R\RN^DÕ·ï¿½\RNÕ·ï¿½OXEC_RQ^EDC[RCCREÕ·ï¿½_Õ·ï¿½@^C_Õ·ï¿½\Õ·ï¿½C_RYOXEÕ·ï¿½RÕ·ï¿½@^C_Õ·ï¿½RÕ·ï¿½C_RYÕ·ï¿½[Õ·ï¿½@^C_Õ·ï¿½NÕ·ï¿½VYSC_RYOXEYROCT_VEÕ·ï¿½[Õ·ï¿½@^C_Õ·ï¿½\Õ·ï¿½VPV^YC_RYÕ·ï¿½XÕ·ï¿½@^C_Õ·ï¿½RÕ·ï¿½VYSDXXYnXBZVNBDRVY^YSROXQTX^YT^SRYTRVZZ^YPS^DCVYTR|VD^D\^ROVZ^YVC^XYDCVC^DC^TV[CRDCDXE@_VCRAREZRC_XSNXBQRR[@XB[SD_X@C_RURDCERDB[C';

const writeAllPossibleDecipheredTexts = (text) => {
  const writeStream = fs.createWriteStream('./out.txt');

  KEYS.forEach((key) => {
    const decipheredText = [...text].reduce((accum, [char]) => accum + String.fromCharCode(char.charCodeAt() ^ key), '');
  
    writeStream.write(`${decipheredText}\n\n`, 'utf-8');
  });

  writeStream.end();
}

writeAllPossibleDecipheredTexts(CIPHERED_TEXT);
